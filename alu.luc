module alu (
    input x[16],
    input y[16],
    input op[6],
    output out[16],
    output zvn[3]
  ) {
  
  sixteen_bit_full_adder sixteen_bit_full_adder;
  compare ;
  boolean ;
  shifter16 shifter16;
  multiplier ;

  sig z;
  sig v;
  sig n;

  always {
    sixteen_bit_full_adder.op = op;
    sixteen_bit_full_adder.x = x;
    sixteen_bit_full_adder.y = y;
    
    z = sixteen_bit_full_adder.z;
    v = sixteen_bit_full_adder.v;
    n = sixteen_bit_full_adder.n;
    
    zvn[0] = z;
    zvn[1] = v;
    zvn[2] = n;
    
    compare.op = op;
    compare.z = z;
    compare.v = v;
    compare.n = n;
    
    boolean.op = op;
    boolean.x = x;
    boolean.y = y;
    
    shifter16.op = op;
    shifter16.x = x;
    shifter16.y = y;
    
    case(op[5:4]){
      b00 : out = sixteen_bit_full_adder.s;
      b01 : out = boolean. ;
      b10 : out = shifter16.s;
      b11 : out = compare. ;
      default : out = 16b0;
  }
    
    if (op == b000010){
      out = multiplier. ;
}
